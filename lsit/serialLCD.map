Product: MDK-ARM Lite 5.10
Component: ARM Compiler 5.04 update 1 (build 49)
Tool: armlink [5040049]

==============================================================================

Section Cross References

    main.o(.text) refers to hw_init.o(.text) for GPIO_Configuration
    main.o(.text) refers to lcd_drvier.o(.text) for LCD_Init
    main.o(.text) refers to main.o(.data) for Timer1
    lcd_drvier.o(.text) refers to stm32f10x_gpio.o(.text) for GPIO_ResetBits
    lcd_drvier.o(.text) refers to delay.o(.text) for Delayms
    hw_init.o(.text) refers to stm32f10x_rcc.o(.text) for RCC_AHBPeriphClockCmd
    hw_init.o(.text) refers to stm32f10x_gpio.o(.text) for GPIO_Init
    hw_init.o(.text) refers to stm32f10x_fsmc.o(.text) for FSMC_NORSRAMInit
    hw_init.o(.text) refers to system_stm32f10x.o(.text) for SystemInit
    delay.o(.text) refers to delay.o(.data) for Systickms
    serialport.o(.text) refers to stm32f10x_usart.o(.text) for USART_GetFlagStatus
    serialport.o(.text) refers to stm32f10x_rcc.o(.text) for RCC_APB2PeriphClockCmd
    serialport.o(.text) refers to stm32f10x_gpio.o(.text) for GPIO_StructInit
    serialport.o(.text) refers to serialport.o(.bss) for rx_buffer
    serialport.o(.text) refers to serialport.o(.data) for GPIO_InitStructure
    stm32f10x_gpio.o(.text) refers to stm32f10x_rcc.o(.text) for RCC_APB2PeriphResetCmd
    stm32f10x_rcc.o(.text) refers to stm32f10x_rcc.o(.data) for APBAHBPrescTable
    stm32f10x_spi.o(.text) refers to stm32f10x_rcc.o(.text) for RCC_APB2PeriphResetCmd
    stm32f10x_usart.o(.text) refers to stm32f10x_rcc.o(.text) for RCC_APB2PeriphResetCmd
    startup_stm32f10x_hd.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_hd.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_hd.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_hd.o(RESET) refers to startup_stm32f10x_hd.o(STACK) for __initial_sp
    startup_stm32f10x_hd.o(RESET) refers to startup_stm32f10x_hd.o(.text) for Reset_Handler
    startup_stm32f10x_hd.o(RESET) refers to delay.o(.text) for SysTick_Handler
    startup_stm32f10x_hd.o(RESET) refers to serialport.o(.text) for USART1_IRQHandler
    startup_stm32f10x_hd.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_hd.o(.text) refers to system_stm32f10x.o(.text) for SystemInit
    startup_stm32f10x_hd.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f10x_hd.o(.text) refers to startup_stm32f10x_hd.o(HEAP) for Heap_Mem
    startup_stm32f10x_hd.o(.text) refers to startup_stm32f10x_hd.o(STACK) for Stack_Mem
    system_stm32f10x.o(.text) refers to system_stm32f10x.o(.data) for SystemCoreClock
    __main.o(!!!main) refers to rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text) for main
    rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    rtentry4.o(.ARM.exidx) refers to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f10x_hd.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002A) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000008) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000F) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000031) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$0000000E) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000024) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000025) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000006) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000009) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing lcd_drvier.o(.rev16_text), (4 bytes).
    Removing lcd_drvier.o(.revsh_text), (4 bytes).
    Removing hw_init.o(.rev16_text), (4 bytes).
    Removing hw_init.o(.revsh_text), (4 bytes).
    Removing delay.o(.rev16_text), (4 bytes).
    Removing delay.o(.revsh_text), (4 bytes).
    Removing serialport.o(.rev16_text), (4 bytes).
    Removing serialport.o(.revsh_text), (4 bytes).
    Removing stm32f10x_fsmc.o(.rev16_text), (4 bytes).
    Removing stm32f10x_fsmc.o(.revsh_text), (4 bytes).
    Removing stm32f10x_gpio.o(.rev16_text), (4 bytes).
    Removing stm32f10x_gpio.o(.revsh_text), (4 bytes).
    Removing stm32f10x_rcc.o(.rev16_text), (4 bytes).
    Removing stm32f10x_rcc.o(.revsh_text), (4 bytes).
    Removing stm32f10x_spi.o(.rev16_text), (4 bytes).
    Removing stm32f10x_spi.o(.revsh_text), (4 bytes).
    Removing stm32f10x_spi.o(.text), (780 bytes).
    Removing stm32f10x_usart.o(.rev16_text), (4 bytes).
    Removing stm32f10x_usart.o(.revsh_text), (4 bytes).
    Removing system_stm32f10x.o(.rev16_text), (4 bytes).
    Removing system_stm32f10x.o(.revsh_text), (4 bytes).

23 unused section(s) (total 868 bytes) removed from the image.

==============================================================================

Memory Map of the image

  Image Entry point : 0x00000000

  Load Region LR_1 (Base: 0x08000000, Size: 0x00001af8, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Base: 0x08000000, Size: 0x00001ac0, Max: 0xffffffff, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x00000130   Data   RO          280    RESET               startup_stm32f10x_hd.o
    0x08000130   0x00000008   Code   RO          315  * !!!main             c_w.l(__main.o)
    0x08000138   0x00000002   Code   RO          342    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x0800013a   0x00000000   Code   RO          349    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          352    .ARM.Collect$$libinit$$00000008  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          354    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          356    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          359    .ARM.Collect$$libinit$$0000000F  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          361    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          363    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          365    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          367    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          369    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          371    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          373    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          375    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          377    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          379    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          383    .ARM.Collect$$libinit$$0000002A  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          385    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          387    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x0800013a   0x00000000   Code   RO          389    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x0800013a   0x00000002   Code   RO          390    .ARM.Collect$$libinit$$00000031  c_w.l(libinit2.o)
    0x0800013c   0x00000002   Code   RO          410    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x0800013e   0x00000000   Code   RO          424    .ARM.Collect$$libshutdown$$00000003  c_w.l(libshutdown2.o)
    0x0800013e   0x00000000   Code   RO          427    .ARM.Collect$$libshutdown$$00000006  c_w.l(libshutdown2.o)
    0x0800013e   0x00000000   Code   RO          430    .ARM.Collect$$libshutdown$$00000009  c_w.l(libshutdown2.o)
    0x0800013e   0x00000000   Code   RO          432    .ARM.Collect$$libshutdown$$0000000B  c_w.l(libshutdown2.o)
    0x0800013e   0x00000000   Code   RO          435    .ARM.Collect$$libshutdown$$0000000E  c_w.l(libshutdown2.o)
    0x0800013e   0x00000002   Code   RO          436    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000140   0x00000000   Code   RO          317    .ARM.Collect$$rtentry$$00000000  c_w.l(rtentry.o)
    0x08000140   0x00000000   Code   RO          319    .ARM.Collect$$rtentry$$00000002  c_w.l(rtentry2.o)
    0x08000140   0x00000006   Code   RO          331    .ARM.Collect$$rtentry$$00000004  c_w.l(rtentry4.o)
    0x08000146   0x00000000   Code   RO          321    .ARM.Collect$$rtentry$$00000009  c_w.l(rtentry2.o)
    0x08000146   0x00000004   Code   RO          322    .ARM.Collect$$rtentry$$0000000A  c_w.l(rtentry2.o)
    0x0800014a   0x00000000   Code   RO          324    .ARM.Collect$$rtentry$$0000000C  c_w.l(rtentry2.o)
    0x0800014a   0x00000008   Code   RO          325    .ARM.Collect$$rtentry$$0000000D  c_w.l(rtentry2.o)
    0x08000152   0x00000002   Code   RO          346    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x08000154   0x00000000   Code   RO          392    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x08000154   0x00000004   Code   RO          393    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000158   0x00000006   Code   RO          394    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0800015e   0x00000002   PAD
    0x08000160   0x00000080   Code   RO            3    .text               main.o
    0x080001e0   0x0000024c   Code   RO           70    .text               lcd_drvier.o
    0x0800042c   0x0000011c   Code   RO           93    .text               hw_init.o
    0x08000548   0x00000030   Code   RO          116    .text               delay.o
    0x08000578   0x000001a0   Code   RO          142    .text               serialport.o
    0x08000718   0x0000060c   Code   RO          178    .text               stm32f10x_fsmc.o
    0x08000d24   0x0000035c   Code   RO          198    .text               stm32f10x_gpio.o
    0x08001080   0x000003a4   Code   RO          218    .text               stm32f10x_rcc.o
    0x08001424   0x00000408   Code   RO          260    .text               stm32f10x_usart.o
    0x0800182c   0x00000040   Code   RO          281  * .text               startup_stm32f10x_hd.o
    0x0800186c   0x000001e0   Code   RO          287    .text               system_stm32f10x.o
    0x08001a4c   0x00000006   Code   RO          313    .text               c_w.l(heapauxi.o)
    0x08001a52   0x0000004a   Code   RO          333    .text               c_w.l(sys_stackheap_outer.o)
    0x08001a9c   0x0000000c   Code   RO          335    .text               c_w.l(exit.o)
    0x08001aa8   0x00000008   Code   RO          343    .text               c_w.l(libspace.o)
    0x08001ab0   0x0000000c   Code   RO          402    .text               c_w.l(sys_exit.o)
    0x08001abc   0x00000002   Code   RO          413    .text               c_w.l(use_no_semi.o)
    0x08001abe   0x00000000   Code   RO          415    .text               c_w.l(indicate_semi.o)
    0x08001abe   0x00000002   PAD
    0x08001ac0   0x00000000   Data   RO          467    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Base: 0x20000000, Size: 0x00000038, Max: 0xffffffff, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00000004   Data   RW            4    .data               main.o
    0x20000004   0x00000004   Data   RW          117    .data               delay.o
    0x20000008   0x00000008   Data   RW          144    .data               serialport.o
    0x20000010   0x00000014   Data   RW          219    .data               stm32f10x_rcc.o
    0x20000024   0x00000014   Data   RW          288    .data               system_stm32f10x.o


    Execution Region ER_ZI (Base: 0x20000038, Size: 0x00000700, Max: 0xffffffff, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000038   0x000000a0   Zero   RW          143    .bss                serialport.o
    0x200000d8   0x00000060   Zero   RW          344    .bss                c_w.l(libspace.o)
    0x20000138   0x00000200   Zero   RW          279    HEAP                startup_stm32f10x_hd.o
    0x20000338   0x00000400   Zero   RW          278    STACK               startup_stm32f10x_hd.o

